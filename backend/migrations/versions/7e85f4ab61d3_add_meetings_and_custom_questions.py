"""Add meetings and custom questions

Revision ID: 7e85f4ab61d3
Revises: add_google_calendar_table
Create Date: 2025-05-11 18:15:04.528925

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7e85f4ab61d3'
down_revision = 'add_google_calendar_table'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('custom_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scheduling_link_id', sa.Integer(), nullable=True),
    sa.Column('question', sa.String(), nullable=True),
    sa.Column('required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['scheduling_link_id'], ['scheduling_links.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_custom_questions_id'), 'custom_questions', ['id'], unique=False)
    op.create_table('meetings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('scheduling_link_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('linkedin_url', sa.String(), nullable=True),
    sa.Column('meeting_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('answers', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['scheduling_link_id'], ['scheduling_links.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meetings_id'), 'meetings', ['id'], unique=False)
    op.alter_column('google_calendars', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('google_calendars', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('google_calendars', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.add_column('scheduling_links', sa.Column('buffer_before', sa.Integer(), nullable=True))
    op.add_column('scheduling_links', sa.Column('buffer_after', sa.Integer(), nullable=True))
    op.add_column('scheduling_links', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('scheduling_links', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_column('scheduling_links', 'expiration_date')
    op.drop_column('scheduling_links', 'max_uses')
    op.drop_column('scheduling_links', 'custom_questions')
    op.drop_column('scheduling_links', 'max_days_ahead')
    op.add_column('scheduling_windows', sa.Column('day_of_week', sa.Integer(), nullable=True))
    op.add_column('scheduling_windows', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('scheduling_windows', 'start_hour',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('scheduling_windows', 'end_hour',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('scheduling_windows', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.drop_column('scheduling_windows', 'weekday')
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'name')
    op.add_column('scheduling_windows', sa.Column('weekday', sa.INTEGER(), autoincrement=False, nullable=True))
    op.alter_column('scheduling_windows', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('scheduling_windows', 'end_hour',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('scheduling_windows', 'start_hour',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_column('scheduling_windows', 'updated_at')
    op.drop_column('scheduling_windows', 'day_of_week')
    op.add_column('scheduling_links', sa.Column('max_days_ahead', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('scheduling_links', sa.Column('custom_questions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('scheduling_links', sa.Column('max_uses', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('scheduling_links', sa.Column('expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.alter_column('scheduling_links', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('scheduling_links', 'updated_at')
    op.drop_column('scheduling_links', 'buffer_after')
    op.drop_column('scheduling_links', 'buffer_before')
    op.alter_column('google_calendars', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('google_calendars', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('google_calendars', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_meetings_id'), table_name='meetings')
    op.drop_table('meetings')
    op.drop_index(op.f('ix_custom_questions_id'), table_name='custom_questions')
    op.drop_table('custom_questions')
    # ### end Alembic commands ### 